job started ....
/users/PAS1937/battula12/my_pkgs/anaconda3/lib/python3.9/site-packages/pytorch_lightning/loops/utilities.py:91: PossibleUserWarning: `max_epochs` was not set. Setting it to 1000 epochs. To train without an epoch limit, set `max_epochs=-1`.
  rank_zero_warn(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
/users/PAS1937/battula12/my_pkgs/anaconda3/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:240: PossibleUserWarning: The dataloader, test_dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 48 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
 >>>>>                  Exp Name: test_doA_change_epoch_11, is_train: False, is_moving_src: True, is_doa_offline: Not Computed,                  is_debug_wav: False, is_debug_doA: False, is_test_locata: True                     <<<<<<<<<
Testing: 0it [00:00, ?it/s](318087, 12)
Testing:   0%|          | 0/5 [00:00<?, ?it/s]Testing DataLoader 0:   0%|          | 0/5 [00:00<?, ?it/s]/users/PAS1937/battula12/Shanmukh/Projects/MVTSS/Baselines/SRPDNN_bkp_test/callbacks.py:89: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  elevation = (_doA_est_indices // 73)*5
{'elevation_pred': tensor([85, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 95, 95, 95, 95, 95, 95, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 95, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 95, 95, 95, 95, 95, 95, 95, 95,
        95, 95, 95, 95, 90, 90, 95, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 95, 95, 90], device='cuda:0'), 'azimuth_pred': tensor([120, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
        115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
        115, 115, 115, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
        110, 110, 105, 100,  95,  90,  95,  85,  80,  75,  75,  75,  75,  75,
         75,  75,  75,  75,  70,  70,  70,  70,  70,  70,  70,  70,  70,  70,
         70,  70,  70,  70,  70,  70,  70,  70,  75,  75,  75,  75,  75,  75,
         75,  75,  75,  75,  75,  75,  75,  75,  75,  75,  75,  75,  75,  85,
         85,  90,  90,  90,  90], device='cuda:0'), 'elevation_label': tensor([92.6308, 92.5933, 92.4097, 92.2891, 92.2634, 92.1974, 92.1635, 92.1649,
        92.2708, 92.3257, 92.3279, 92.3983, 92.4440, 92.4215, 92.4245, 92.5074,
        92.6237, 92.7252, 92.7247, 92.3821, 92.3580, 92.3461, 92.3491, 92.4912,
        92.4194, 92.3662, 92.4359, 92.5281, 92.5773, 92.6218, 92.3344, 91.9639,
        91.9025, 91.8360, 91.8356, 91.9578, 91.7201, 91.4115, 91.4104, 91.4507,
        91.5589, 91.8027, 91.4570, 91.0958, 91.1205, 91.0274, 91.0192, 90.8930,
        90.2125, 90.0377, 89.9185, 89.9309, 90.1679, 89.6392, 89.4884, 89.6291,
        89.7150, 89.6528, 89.0632, 89.0198, 89.2733, 89.6590, 89.7901, 89.8470,
        89.9300, 89.9916, 90.0349, 90.1718, 90.4111, 90.7621, 90.8471, 90.8414,
        90.9432, 91.1308, 91.3653, 91.6848, 91.4604, 91.4546, 91.5466, 91.6173,
        91.8764, 91.7283, 91.7284, 91.5962, 91.4827, 91.4826, 91.5471, 91.5768,
        91.5252, 91.5203, 91.5332, 91.7139, 91.9043, 91.9067, 92.0777, 92.1060,
        92.0791, 92.0717, 92.1082, 92.3892, 92.6340, 92.6073, 92.6174],
       device='cuda:0'), 'azimuth_label': tensor([115.1606, 115.3754, 115.4748, 115.4882, 115.5040, 115.4723, 115.4381,
        115.2903, 115.1156, 115.0479, 115.0299, 115.0739, 115.5530, 116.4643,
        117.5362, 118.3988, 118.8949, 118.5933, 117.8827, 116.9427, 116.2952,
        116.0968, 116.0815, 116.1164, 116.4005, 116.8716, 117.3695, 117.5482,
        117.1994, 116.4603, 115.1894, 113.6401, 112.4861, 111.6511, 111.1222,
        110.8486, 110.7307, 110.6560, 110.3795, 109.3916, 107.4633, 104.4122,
         99.7405,  95.0817,  91.6648,  88.9950,  86.1468,  82.6733,  78.6548,
         74.8634,  71.1440,  67.7416,  64.3071,  60.9911,  57.6952,  55.4532,
         53.6195,  51.7422,  49.7839,  48.7202,  48.6958,  49.2348,  51.0555,
         53.8497,  57.6013,  61.5381,  65.0833,  67.7081,  69.7817,  71.4240,
         72.7828,  73.7385,  74.6558,  75.5276,  76.4514,  77.6834,  79.2326,
         81.2303,  82.8904,  82.7762,  81.5819,  79.8763,  78.4181,  77.5014,
         76.9054,  76.4868,  76.4287,  76.5313,  77.0391,  78.0433,  79.2109,
         79.9804,  80.4562,  80.6296,  80.7027,  81.0223,  81.7435,  82.9962,
         85.1326,  88.0145,  90.8706,  93.1494,  94.7052], device='cuda:0')}
Testing DataLoader 0:  20%|██        | 1/5 [00:01<00:07,  1.99s/it]Testing DataLoader 0:  20%|██        | 1/5 [00:01<00:07,  1.99s/it]/users/PAS1937/battula12/Shanmukh/Projects/MVTSS/Baselines/SRPDNN_bkp_test/callbacks.py:89: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  elevation = (_doA_est_indices // 73)*5
(310559, 12)
{'elevation_pred': tensor([90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 85, 85, 85, 85, 85, 85,
        85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 85, 85, 85], device='cuda:0'), 'azimuth_pred': tensor([ 95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
         95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
         95,  95,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,
         90,  85,  85,  80,  80,  80,  80,  80,  80,  85,  85,  85,  85,  85,
         85,  85,  85,  85,  85,  85,  85, 125, 125, 125, 125, 125, 130, 130,
        130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
        130, 125, 120, 120, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
        115, 115, 115], device='cuda:0'), 'elevation_label': tensor([90.6180, 90.6215, 90.7029, 90.6678, 90.6027, 90.5899, 90.6115, 90.6792,
        90.7417, 90.7742, 90.8165, 90.8934, 90.9591, 90.7725, 90.5903, 90.5822,
        90.7202, 91.0232, 91.0174, 90.4664, 90.0666, 90.0470, 90.1477, 90.2847,
        90.4333, 90.4724, 89.8982, 89.6629, 89.5496, 89.2285, 89.1045, 89.0973,
        89.2439, 88.8403, 88.8326, 88.9205, 88.9846, 88.9461, 89.0246, 89.2698,
        89.3791, 89.3891, 89.2792, 88.9827, 88.8235, 88.8289, 89.0247, 88.9977,
        88.6937, 88.4205, 88.4204, 88.6971, 89.7175, 90.2371, 89.8794, 89.7166,
        89.6482, 89.6517, 89.8854, 90.3010, 90.0168, 89.9157, 89.9320, 89.8632,
        89.8525, 89.9039, 90.1786, 90.1393, 90.0479, 90.0480, 90.1799, 90.3196,
        90.5389, 90.8695, 91.0170, 91.0165, 91.1092, 91.2598, 91.3847, 91.5218,
        91.6867, 91.8145, 91.6952, 91.6684, 91.6928, 91.8170, 91.5578, 91.2657,
        91.1301, 91.1013, 91.1389, 91.2419, 91.4062, 91.2509, 91.2204, 91.2440,
        91.1714, 91.0829, 91.0925, 91.2037, 91.3079], device='cuda:0'), 'azimuth_label': tensor([ 99.7262,  99.6214,  99.5225,  99.5154,  99.5177,  99.5208,  99.4048,
         99.3464,  99.3489,  99.4874,  99.7312, 100.1198, 100.7225, 101.3378,
        101.4387, 101.4033, 101.6684, 102.0087, 101.1306, 100.0634,  98.9903,
         98.1215,  97.5779,  97.1508,  96.7383,  96.4631,  96.1964,  95.7485,
         95.0436,  93.9397,  92.3018,  89.3590,  85.5508,  81.7640,  79.2906,
         78.0032,  77.5022,  77.2533,  77.2490,  77.2998,  77.4149,  77.5276,
         77.5107,  77.5117,  77.5643,  78.1851,  80.3171,  83.7181,  87.5128,
         89.7699,  91.4106,  93.6880,  96.8996,  99.6744, 103.0559, 106.8411,
        110.1357, 112.9017, 115.4395, 118.0803, 120.7858, 123.3574, 125.6816,
        127.4235, 128.8925, 130.2106, 131.8126, 133.9408, 136.3207, 138.4169,
        139.9102, 140.3982, 139.7497, 138.5949, 137.3026, 135.6496, 134.0138,
        132.3209, 130.6846, 129.0305, 127.3389, 125.5553, 123.7540, 122.0658,
        120.4429, 118.4503, 116.3621, 114.2079, 112.7191, 111.7461, 111.0770,
        110.0059, 108.3102, 106.4248, 104.6897, 103.3644, 102.8421, 102.1555,
        101.1919,  99.7953,  98.1000], device='cuda:0')}
Testing DataLoader 0:  40%|████      | 2/5 [00:05<00:09,  3.15s/it]Testing DataLoader 0:  40%|████      | 2/5 [00:05<00:09,  3.15s/it]/users/PAS1937/battula12/Shanmukh/Projects/MVTSS/Baselines/SRPDNN_bkp_test/callbacks.py:89: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  elevation = (_doA_est_indices // 73)*5
(336951, 12)
{'elevation_pred': tensor([70, 70, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 85, 90, 90, 90, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 95, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 95,
        95], device='cuda:0'), 'azimuth_pred': tensor([350, 350, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
        115, 120, 120, 125, 130, 130, 135, 135, 135, 135, 135, 135, 135, 135,
        135, 135, 135, 135, 135, 130, 130, 130, 130, 130, 130, 130, 130, 130,
        130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
        130, 130, 130, 130,  95,  90,  90,  90,  90,  85,  90,  90,  90,  90,
         90,  90,  90,  90,  90,  85,  85,  85,  80,  80,  80,  80,  80,  80,
         80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,
         80,  80,  80,  80,  75,  75,  75,  75,  75,  75,  75],
       device='cuda:0'), 'elevation_label': tensor([92.8801, 92.8726, 92.9001, 92.9138, 93.0453, 93.1486, 93.2165, 93.0471,
        93.0155, 93.0199, 93.0495, 93.1467, 93.1965, 92.9547, 92.7897, 92.6487,
        92.6022, 92.6156, 92.8278, 92.6996, 92.3664, 92.2791, 92.2791, 92.3350,
        92.5522, 92.9537, 92.8182, 92.8280, 92.9686, 93.0153, 93.1028, 93.3664,
        93.0676, 92.8997, 92.7064, 92.6435, 92.6713, 92.6528, 92.4866, 92.5036,
        92.5634, 92.6167, 92.9274, 93.0322, 92.8958, 92.9109, 93.0554, 93.0585,
        92.9173, 92.8369, 92.8551, 92.8273, 92.8256, 92.8527, 92.9582, 92.9940,
        92.9146, 92.9185, 92.9292, 92.9366, 93.0051, 92.7277, 92.5943, 92.5342,
        92.5402, 92.7668, 92.8686, 92.6114, 92.5122, 92.4484, 92.4630, 92.7445,
        92.4392, 91.9797, 91.8992, 91.8992, 91.8719, 91.8810, 92.0138, 91.6793,
        91.6339, 91.6821, 91.7000, 91.7411, 92.1479, 92.3457, 92.1461, 92.1469,
        92.1360, 92.1359, 92.3317, 92.7276, 92.5636, 92.5301, 92.5419, 92.6180,
        92.7380, 92.5312, 92.4206, 92.3823, 92.3062, 92.2852, 92.2878, 92.3078,
        92.2784, 92.2807, 92.3392, 92.3369, 92.4832], device='cuda:0'), 'azimuth_label': tensor([116.7488, 116.5346, 116.4827, 116.5046, 116.6617, 116.9708, 117.6024,
        118.5980, 120.0738, 121.3358, 122.2967, 123.0942, 123.9499, 125.0441,
        126.3446, 127.5002, 128.5947, 129.8671, 131.5235, 133.2520, 135.7908,
        138.7538, 140.5355, 141.1151, 139.6311, 136.9274, 133.5389, 131.0293,
        128.7606, 126.6678, 124.3123, 121.3446, 117.1888, 113.8007, 111.3939,
        109.8526, 108.9307, 108.2073, 107.4501, 106.9295, 106.4470, 105.7968,
        104.7693, 103.4247, 102.3342, 101.4901, 100.6966,  99.8682,  99.1364,
         98.5215,  97.8169,  96.9048,  96.0899,  95.4351,  94.8027,  94.0795,
         93.6692,  93.5063,  93.3094,  92.6781,  91.6099,  90.5143,  89.8199,
         89.4586,  89.4337,  89.5129,  89.9621,  90.7606,  91.5891,  92.0487,
         92.0781,  91.7002,  90.6224,  89.2207,  87.6171,  85.7473,  83.6640,
         81.3063,  78.6747,  75.7357,  72.9787,  71.3487,  70.4795,  70.3400,
         70.4112,  71.2033,  72.3272,  73.5169,  74.4072,  75.1655,  75.8861,
         76.5296,  77.0168,  77.4227,  77.7565,  77.9945,  78.3204,  78.8266,
         79.0573,  78.7019,  78.0307,  77.3503,  76.5645,  75.5913,  74.6340,
         73.9415,  73.4878,  73.1224,  72.5917], device='cuda:0')}
Testing DataLoader 0:  60%|██████    | 3/5 [00:09<00:07,  3.55s/it]Testing DataLoader 0:  60%|██████    | 3/5 [00:09<00:07,  3.55s/it]/users/PAS1937/battula12/Shanmukh/Projects/MVTSS/Baselines/SRPDNN_bkp_test/callbacks.py:89: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  elevation = (_doA_est_indices // 73)*5
(359590, 12)
{'elevation_pred': tensor([90, 95, 95, 95, 95, 95, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 95, 95, 95,
        95, 95, 95, 95, 95, 95, 95, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
        95, 95, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
        90, 90, 90, 90, 90, 90, 90, 90, 90], device='cuda:0'), 'azimuth_pred': tensor([ 75,  75,  75,  75,  75,  80,  85,  85,  90,  90,  90,  95,  95,  95,
         95,  95,  95,  95,  90,  90,  90,  95,  95,  95,  95,  90,  90,  90,
         90,  90,  90,  90,  90,  95,  95,  95, 100, 100, 100, 105, 105, 120,
        120, 120, 120, 120, 120, 125, 120, 120, 120, 120, 120, 125, 125, 125,
        125, 125, 125, 125, 125, 120, 110, 110, 105, 100, 100,  95,  90,  90,
         90,  90,  90,  90,  90,  85,  75,  75,  75,  75,  75,  75,  75,  75,
         75,  75,  75,  75,  75,  75,  75,  75,  80,  80,  80,  80,  80,  80,
         80,  80,  80,  80,  85,  85,  85,  85,  85,  85,  95,  95, 100, 100,
        105, 105, 105, 105, 105], device='cuda:0'), 'elevation_label': tensor([91.7721, 91.9263, 91.9260, 92.1900, 92.6394, 92.8390, 92.4181, 92.2324,
        92.2342, 92.3360, 92.4326, 92.8669, 95.3157, 94.1201, 92.9190, 92.5723,
        92.5731, 92.5908, 92.3380, 92.3260, 92.4854, 92.7479, 93.0621, 93.0688,
        92.8089, 92.8088, 92.9851, 92.9561, 92.6893, 92.8038, 93.4759, 93.4831,
        93.3600, 93.1352, 93.2788, 93.5192, 93.6113, 93.9132, 93.4941, 93.1085,
        93.0089, 92.9593, 92.9797, 93.0148, 92.6436, 92.5111, 92.4252, 92.4150,
        92.4914, 93.9684, 97.1710, 97.0625, 98.0434, 98.0012, 95.3914, 94.4964,
        94.1935, 94.1687, 94.2949, 93.7387, 93.3364, 93.1269, 93.1266, 93.4432,
        93.5549, 92.7934, 92.0919, 91.8379, 91.8304, 91.8825, 91.6875, 91.7647,
        92.1709, 92.3211, 92.5820, 92.3087, 91.9681, 91.9210, 91.9480, 92.0506,
        92.1758, 92.4653, 92.3894, 92.3904, 92.4712, 92.6515, 93.0366, 92.7771,
        92.6279, 92.6203, 92.6473, 92.7083, 92.7471, 92.7467, 92.9001, 92.8307,
        92.8585, 92.9355, 92.9279, 92.9874, 93.2442, 93.5981, 93.2182, 93.2092,
        93.2911, 93.3837, 93.4449, 93.7294, 93.8930, 93.7729, 93.7079, 93.7264,
        93.9741, 93.3490, 93.1989, 93.1989, 93.2438], device='cuda:0'), 'azimuth_label': tensor([ 74.6653,  74.6655,  75.0257,  75.7956,  77.0793,  79.6107,  84.0519,
         89.0740,  92.2411,  93.6812,  94.5776,  95.6175,  97.1796,  96.7783,
         96.0369,  95.1908,  94.2730,  93.5724,  92.8626,  91.6968,  89.8758,
         88.3267,  87.2512,  87.1245,  87.1514,  87.3707,  89.1927,  91.9184,
         94.5078,  96.3549,  98.4459, 100.1162, 102.4421, 105.2078, 108.4097,
        110.7942, 112.8120, 114.5415, 116.4942, 119.3381, 121.8805, 122.9174,
        124.1156, 124.9751, 125.4282, 125.6758, 125.2797, 124.8558, 124.7562,
        124.7813, 124.9397, 125.3184, 125.7057, 125.8146, 125.9281, 125.9586,
        125.4136, 124.0632, 121.8952, 119.0435, 116.3026, 113.4606, 110.4226,
        107.1686, 102.2788,  96.7733,  91.3185,  86.0517,  80.7774,  76.1082,
         71.5944,  69.0640,  67.5123,  66.2814,  64.7581,  63.0210,  61.5630,
         61.0464,  61.0413,  61.3032,  62.1424,  63.5162,  66.1447,  68.9125,
         71.0270,  72.4433,  74.0092,  75.5697,  77.0750,  78.2274,  78.9853,
         79.3352,  79.5933,  80.2800,  79.4863,  78.2698,  77.4504,  77.2116,
         77.2173,  77.6816,  78.9939,  81.3964,  84.9285,  88.6195,  91.3978,
         93.2078,  94.9977,  97.1690, 100.1514, 103.2857, 105.5668, 107.3364,
        109.3049, 112.0709, 115.1270, 117.9821, 119.8828], device='cuda:0')}
Testing DataLoader 0:  80%|████████  | 4/5 [00:14<00:03,  3.97s/it]Testing DataLoader 0:  80%|████████  | 4/5 [00:14<00:03,  3.97s/it]/users/PAS1937/battula12/Shanmukh/Projects/MVTSS/Baselines/SRPDNN_bkp_test/callbacks.py:89: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  elevation = (_doA_est_indices // 73)*5
(266799, 12)
{'elevation_pred': tensor([ 90,  95,  95,  95,  90,  90,  95,  95,  95,  95,  95,  95,  95,  95,
         95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
         95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
         95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
         95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
         95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95, 100, 100,
        100,  95], device='cuda:0'), 'azimuth_pred': tensor([105, 105, 105, 105, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
        110, 110, 110, 110, 110, 110, 110, 110, 105, 105, 105, 100, 105, 105,
        105, 105, 105, 105, 105, 105, 105, 100, 105, 105, 105, 105, 105, 100,
         95,  95,  95,  95,  95,  95,  95,  90,  90,  90,  90,  90,  90,  85,
         85,  85,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  75,  75,
         75,  75,  75,  75,  75,  75,  75,  80,  80,  80,  80,  80,  85,  85,
         85,  85], device='cuda:0'), 'elevation_label': tensor([94.6150, 94.7446, 94.8403, 94.8355, 94.7012, 94.6232, 94.6249, 94.7943,
        95.2211, 95.2161, 95.2326, 95.2889, 95.3892, 95.7691, 95.9007, 95.5078,
        95.5075, 95.5463, 95.6385, 95.8680, 96.0044, 95.9356, 95.7920, 95.8007,
        96.0079, 96.1032, 95.8750, 95.7604, 95.7576, 95.9636, 96.1377, 96.2117,
        96.2151, 96.2591, 96.7170, 96.6605, 96.6584, 97.0526, 96.0276, 95.9703,
        96.1502, 96.0468, 95.6993, 95.6407, 95.5940, 95.6055, 95.8828, 96.0723,
        95.8184, 95.3817, 95.2952, 95.2137, 95.2135, 95.2570, 94.6651, 93.7622,
        93.6911, 93.7074, 93.8135, 93.9118, 94.0690, 94.2767, 94.3830, 94.4394,
        94.4607, 94.4889, 94.5632, 94.4188, 94.0858, 93.9699, 93.9757, 94.3088,
        94.7084, 94.6926, 94.7927, 94.8971, 94.8967, 95.0848, 95.0227, 95.2821,
        95.4063, 95.7232, 95.8327, 95.7363, 95.6520, 95.6525], device='cuda:0'), 'azimuth_label': tensor([109.5347, 109.8393, 110.1830, 110.8985, 112.1366, 113.2455, 113.7483,
        114.0024, 113.5244, 112.4588, 111.6477, 111.5262, 111.5425, 111.6473,
        111.9049, 112.7493, 114.0314, 114.8333, 115.3288, 115.1694, 113.9302,
        111.7667, 109.3879, 107.3843, 106.0976, 105.8976, 106.0347, 106.7222,
        107.3501, 108.0283, 108.1799, 107.7826, 106.9363, 105.6077, 104.5886,
        104.4562, 104.8367, 106.8455, 108.6167, 108.0476, 105.7618, 102.2820,
         98.8393,  96.4346,  94.9256,  93.4644,  92.1555,  90.0490,  87.0406,
         83.8783,  81.4022,  79.5827,  78.2502,  77.2952,  76.5551,  76.2514,
         76.0583,  75.7870,  75.1984,  74.6049,  73.7346,  72.1959,  70.7444,
         69.6052,  68.8863,  68.7706,  68.8475,  69.3078,  70.1890,  71.8525,
         73.4296,  74.8817,  76.2175,  77.1605,  78.0591,  78.9708,  79.5669,
         79.9842,  80.5303,  81.5714,  82.7533,  84.2512,  86.6364,  89.0978,
         90.8440,  92.2198], device='cuda:0')}
Testing DataLoader 0: 100%|██████████| 5/5 [00:18<00:00,  3.78s/it]Testing DataLoader 0: 100%|██████████| 5/5 [00:18<00:00,  3.78s/it]Testing DataLoader 0: 100%|██████████| 5/5 [00:18<00:00,  3.61s/it]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  azimuth_result_epoch      0.9625760912895203
 elevation_result_epoch             1.0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
job finished!
